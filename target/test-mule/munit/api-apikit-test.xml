<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="api-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <import doc:name="Import" doc:id="a68a7fdd-236c-4e58-a73c-3cfdac7cf03d" file="subflows.xml" />
	<munit:test name="put:\users\user\(user_id)\shopping_cart:application\json:api-config-204--FlowTest" description="Verifying functionality of [put:\users\user\(user_id)\shopping_cart:application\json:api-config-204-]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="api-main" />
            <munit:enable-flow-source value="put:\users\user\(user_id)\shopping_cart:application\json:api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_users_user_{user_id}_shopping_cart_application_json.json')]" />
            <set-variable variableName="user_id" value="1" doc:name="user_id" />
			<munit-tools:mock-when doc:name="Mock when" doc:id="7ebb1770-01d7-4f25-8963-5620642103ff" processor="os:store">
				<munit-tools:then-return >
					<munit-tools:payload value='#[{"last_modification_date":"2015/12/31 10:00:00","cost":{"price":11.0,"tax":1.0,"final_price":12.0},"items":[{"product_id":"1","rel_product":"http://alc.mulesoft.com/api/products/product/1","quantity":1},{"product_id":"2","rel_product":"http://alc.mulesoft.com/api/products/product/2","quantity":2}]}]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/users/user/$(vars.user_id)/shopping_cart']">
                <http:headers><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json"
}]]]></http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(204)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 204" />
        </munit:validation>
    </munit:test>
	<munit:test name="get:\orders\order\(order_id):api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\orders\order\(order_id):api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="api-main" />
            <munit:enable-flow-source value="get:\orders\order\(order_id):api-config" />
			<munit:enable-flow-source value="calculate_price" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="order_id" value="#[1]" doc:name="order_id" />
			<munit-tools:mock-when doc:name="Mock Get Order By ID" doc:id="d9f9d975-4f80-441e-8b8f-df9a54281989" processor="order-api:get-order-by-id">
				<munit-tools:then-return >
					<munit-tools:payload value='#[{ "sourceSystem": "SAP", "orderId": "1", "customerId": "id-21323", "customerName": "Roeder Consulting", "contactName": "Brett Roeder", "contactPhone": { "type": "Office", "phoneNumber": "678-122-2323" }, "contactEmail": { "type": "Work", "address": "brettRoeder@gmail.com" }, "billingAddress": { "use": "work", "line": [ "3460 Preston Ridge Road", "Suite 575" ], "city": "Alpharetta", "state": "GA", "postalCode": "30005", "country": "USA" }, "shippingAddress": { "use": "home", "line": [ "257 Stone Park Drive" ], "city": "Woodstock", "state": "GA", "postalCode": "30188", "country": "USA" }, "createDateTime": "2014-08-07T01:02:03", "lastModifiedDateTime": "2016-01-01T12:13:14", "orderLineItems": [ { "productId": 1, "productName": "Amazon Echo", "quantityOnHand": 103, "quantitySafetyStock": 20, "price": 49.99, "discountPct": 5, "createDateTime": "2014-08-07T01:02:03", "lastModifiedDateTime": "2016-01-01T12:13:14" }, { "productId": 2, "productName": "SONOS Play:5", "quantityOnHand": 51, "quantitySafetyStock": 10, "price": 499.99, "discountPct": 0, "createDateTime": "2014-08-07T01:02:03", "lastModifiedDateTime": "2016-01-01T12:13:14" } ] }]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Get Product By ID" doc:id="a53fdf98-d5bb-4a95-bb10-eb9efa5d7033" processor='product-api:get-product-by-id'>
				<munit-tools:then-return >
					<munit-tools:payload value='#[{ "id": 1, "name": "ELMO", "description": "Playskool sesame street play all day Elmo", "productNumber": "UUID34234923934293", "manufactured": true, "safetyStockLevel": 540, "standardCost": 78.00, "listPrice": 99.90, "size": "200x300", "sizeUnitMeasureCode": "in", "weightUnitMeasureCode": "gr", "weight": 400, "daysToManufacture": 10, "categories": [ "playskool", "sesame street" ], "stock": 2800, "colors": [ "blue", "red", "green" ], "images": [ "/wcsstore/HTSStorefrontAssetStore/Attachment/HomePage/Product eSpots/Play-All-Day-Elmo.png" ] }]'/>
				</munit-tools:then-return>
			</munit-tools:mock-when>
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/orders/order/$(vars.order_id)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:query-params>#[{"user_id":"1964401a-a8b3-40c1-b86e-d8b9f75b5842"}]</http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\products\product\(product_id):api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\products\product\(product_id):api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="api-main" />
            <munit:enable-flow-source value="get:\products\product\(product_id):api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="product_id" value="#['null']" doc:name="product_id" />
			<munit-tools:mock-when doc:name="Mock when" doc:id="ba277542-cdb9-4260-8901-9a8207e24a24" processor="product-api:get-product-by-id">
				<munit-tools:then-return >
					<munit-tools:payload value='#[{ "id": 1, "name": "ELMO", "description": "Playskool sesame street play all day Elmo", "productNumber": "UUID34234923934293", "manufactured": true, "safetyStockLevel": 540, "standardCost": 78.00, "listPrice": 99.90, "size": "200x300", "sizeUnitMeasureCode": "in", "weightUnitMeasureCode": "gr", "weight": 400, "daysToManufacture": 10, "categories": [ "playskool", "sesame street" ], "stock": 2800, "colors": [ "blue", "red", "green" ], "images": [ "/wcsstore/HTSStorefrontAssetStore/Attachment/HomePage/Product eSpots/Play-All-Day-Elmo.png" ] }]'/>
				</munit-tools:then-return>
			</munit-tools:mock-when>
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/products/product/$(vars.product_id)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\orders\search:api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\orders\search:api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="api-main" />
            <munit:enable-flow-source value="get:\orders\search:api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="7076bcb7-7d4a-4e3c-8611-003a6e24175a" processor="order-api:get-orders">
				<munit-tools:then-return >
					<munit-tools:payload value='#[[
    {
        "sourceSystem": "SAP",
        "orderId": "1",
        "customerId": "id-21323",
        "customerName": "Roeder Consulting",
        "contactName": "Brett Roeder",
        "contactPhone": {
            "type": "Office",
            "phoneNumber": "678-122-2323"
        },
        "contactEmail": {
            "type": "Work",
            "address": "brettRoeder@gmail.com"
        },
        "billingAddress": {
            "use": "work",
            "line": [
                "3460 Preston Ridge Road",
                "Suite 575"
            ],
            "city": "Alpharetta",
            "state": "GA",
            "postalCode": "30005",
            "country": "USA"
        },
        "shippingAddress": {
            "use": "home",
            "line": [
                "257 Stone Park Drive"
            ],
            "city": "Woodstock",
            "state": "GA",
            "postalCode": "30188",
            "country": "USA"
        },
        "createDateTime": "2014-08-07T01:02:03",
        "lastModifiedDateTime": "2016-01-01T12:13:14",
        "orderLineItems": [
            {
                "productId": 1,
                "productName": "Amazon Echo",
                "quantityOnHand": 103,
                "quantitySafetyStock": 20,
                "price": 49.99,
                "discountPct": 5,
                "createDateTime": "2014-08-07T01:02:03",
                "lastModifiedDateTime": "2016-01-01T12:13:14"
            },
            {
                "productId": 2,
                "productName": "SONOS Play:5",
                "quantityOnHand": 51,
                "quantitySafetyStock": 10,
                "price": 499.99,
                "discountPct": 0,
                "createDateTime": "2014-08-07T01:02:03",
                "lastModifiedDateTime": "2016-01-01T12:13:14"
            }
        ]
    },
    {
        "sourceSystem": "Salesforce",
        "orderId": "id-q34qwer-qer-qewrqw",
        "customerId": "id-21323",
        "customerName": "BA Manufacturing",
        "contactName": "Matias Suarez",
        "contactPhone": {
            "type": "Office",
            "phoneNumber": "678-122-2323"
        },
        "contactEmail": {
            "type": "Work",
            "address": "msuarez@gmail.com"
        },
        "billingAddress": {
            "use": "work",
            "line": [
                "3460 Preston Ridge Road"
            ],
            "city": "Alpharetta",
            "state": "GA",
            "postalCode": "30005",
            "country": "USA"
        },
        "shippingAddress": {
            "use": "home",
            "line": [
                "257 Stone Park Drive"
            ],
            "city": "Woodstock",
            "state": "GA",
            "postalCode": "30188",
            "country": "USA"
        },
        "createDateTime": "2014-08-07T01:02:03",
        "lastModifiedDateTime": "2016-01-01T12:13:14",
        "orderLineItems": [
            {
                "productId": 1,
                "productName": "Amazon Echo",
                "quantityOnHand": 103,
                "quantitySafetyStock": 20,
                "price": 49.99,
                "discountPct": 5,
                "createDateTime": "2014-08-07T01:02:03",
                "lastModifiedDateTime": "2016-01-01T12:13:14"
            },
            {
                "productId": 2,
                "productName": "SONOS Play:5",
                "quantityOnHand": 51,
                "quantitySafetyStock": 10,
                "price": 499.99,
                "discountPct": 0,
                "createDateTime": "2014-08-07T01:02:03",
                "lastModifiedDateTime": "2016-01-01T12:13:14"
            }
        ]
    }
]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/orders/search">
                <http:headers><![CDATA[#[output application/java
---
{
	"Accept" : "application/json"
}]]]></http:headers>
                <http:query-params><![CDATA[#[output application/java
---
{
	"user_id" : "1964401a-a8b3-40c1-b86e-d8b9f75b5842"
}]]]></http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\products\search:api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\products\search:api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="api-main" />
            <munit:enable-flow-source value="get:\products\search:api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="30cc4d67-b633-4320-ba89-4a6eea9fe331" processor="product-api:get-products">
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/json
---
[ {
	"id": 1,
	"name": "ELMO",
	"description": "Playskool sesame street play all day Elmo",
	"productNumber": "UUID34234923934293",
	"manufactured": true,
	"safetyStockLevel": 540,
	"standardCost": 78.00,
	"listPrice": 99.90,
	"size": "200x300",
	"sizeUnitMeasureCode": "in",
	"weightUnitMeasureCode": "gr",
	"weight": 400,
	"daysToManufacture": 10,
	"categories": [ "playskool", "sesame street" ],
	"stock": 2800,
	"colors": [ "blue", "red", "green" ],
	"images": [ "/wcsstore/HTSStorefrontAssetStore/Attachment/HomePage/Product eSpots/Play-All-Day-Elmo.png" ]
}, {
	"id": 2,
	"name": "ELMO",
	"description": "Playskool sesame street play all day Elmo",
	"productNumber": "UUID34234923934293",
	"manufactured": true,
	"safetyStockLevel": 540,
	"standardCost": 78.00,
	"listPrice": 99.90,
	"size": "200x300",
	"sizeUnitMeasureCode": "in",
	"weightUnitMeasureCode": "gr",
	"weight": 400,
	"daysToManufacture": 10,
	"categories": [ "playskool", "sesame street" ],
	"stock": 2800,
	"colors": [ "blue", "red", "green" ],
	"images": [ "/wcsstore/HTSStorefrontAssetStore/Attachment/HomePage/Product eSpots/Play-All-Day-Elmo.png" ]
} ]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/products/search">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users\user\(user_id)\shopping_cart:api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\users\user\(user_id)\shopping_cart:api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="api-main" />
            <munit:enable-flow-source value="get:\users\user\(user_id)\shopping_cart:api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="user_id" value="#['null']" doc:name="user_id" />
			<munit-tools:mock-when doc:name="Mock Contains Call" doc:id="d51e24ca-0e22-480b-ae1c-906e1ffed24d" processor="os:contains">
				<munit-tools:then-return >
					<munit-tools:payload value="#[false]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/users/user/$(vars.user_id)/shopping_cart']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:query-params>#[{}]</http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
        </munit:validation>
    </munit:test>
</mule>
